{"version":3,"sources":["jquery.textarea_autosize.js"],"names":[],"mappings":";;;;;;;AAKA,CAAC,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;;AAE1C,MAAI,UAAU,GAAG,kBAAkB,CAAC;AACpC,MAAI,cAAc,GAAG,SAAS,GAAG,UAAU,CAAC;;AAE5C,MAAI,YAAY,GAAG,SAAf,YAAY,CAAa,KAAK,EAAE;AAClC,WAAQ,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAE;GAC9C,CAAC;;AAEF,WAAS,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE;AAChC,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACvB,QAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;AAC3B,QAAI,CAAC,IAAI,EAAE,CAAC;GACb;;AAED,QAAM,CAAC,SAAS,GAAG;AACjB,QAAI,EAAE,gBAAW;AACf,UAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;AACzC,UAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAC5C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC;;AAE1D,UAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACpC,YAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;OACxD;;;AAGD,UAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,aAAa,EAAE,UAAS,KAAK,EAAE;AAC9C,YAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AACxB,YAAI,qBAAqB,GAAG,OAAO,CAAC,SAAS,EAAE,CAAC;;AAEhD,SAAC,CAAC,IAAI,CAAC,CACJ,MAAM,CAAC,CAAC,CAAC,CACT,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;;AAEpC,eAAO,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;OAC1C,CAAC,CAAC;KACJ;GACF,CAAC;;AAEF,GAAC,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,UAAU,OAAO,EAAE;AACpC,QAAI,CAAC,IAAI,CAAC,YAAW;AACnB,UAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,EAAE;AACjC,SAAC,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;OACzD;KACF,CAAC,CAAC;AACH,WAAO,IAAI,CAAC;GACb,CAAC;CAEH,CAAA,CAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC","file":"jquery.textarea_autosize-compiled.js","sourcesContent":["/*!\n * jQuery Textarea AutoSize plugin\n * Author: Javier Julio\n * Licensed under the MIT license\n */\n;(function ($, window, document, undefined) {\n\n  var pluginName = \"textareaAutoSize\";\n  var pluginDataName = \"plugin_\" + pluginName;\n\n  var containsText = function (value) {\n    return (value.replace(/\\s/g, '').length > 0);\n  };\n\n  function Plugin(element, options) {\n    this.element = element;\n    this.$element = $(element);\n    this.init();\n  }\n\n  Plugin.prototype = {\n    init: function() {\n      var height = this.$element.outerHeight();\n      var diff = parseInt(this.$element.css('paddingBottom')) +\n                 parseInt(this.$element.css('paddingTop')) || 0;\n\n      if (containsText(this.element.value)) {\n        this.$element.height(this.element.scrollHeight - diff);\n      }\n\n      // keyup is required for IE to properly reset height when deleting text\n      this.$element.on('input keyup', function(event) {\n        var $window = $(window);\n        var currentScrollPosition = $window.scrollTop();\n\n        $(this)\n          .height(0)\n          .height(this.scrollHeight - diff);\n\n        $window.scrollTop(currentScrollPosition);\n      });\n    }\n  };\n\n  $.fn[pluginName] = function (options) {\n    this.each(function() {\n      if (!$.data(this, pluginDataName)) {\n        $.data(this, pluginDataName, new Plugin(this, options));\n      }\n    });\n    return this;\n  };\n\n})(jQuery, window, document);\n"]}