{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["// font size * line height + top/bottom padding + top/bottom border\n// (16 * 1.4) + (6 * 2) + 2\n\nfunction getLineHeight(textarea) {\n  return parseInt(textarea.css('line-height'));\n}\n\nfunction spacingHeight(textarea) {\n  return parseInt(textarea.css('paddingBottom')) +\n    parseInt(textarea.css('paddingTop')) +\n    parseInt(textarea.css('borderBottomWidth')) +\n    parseInt(textarea.css('borderTopWidth'));\n}\n\ndescribe(\"TextArea\", function () {\n  var textarea;\n\n  beforeEach(function(){\n    textarea = $(\"#js-single-line-textarea\")\n      .val('')\n      .css('maxHeight', '')\n      .textareaAutoSize();\n  });\n\n  it('has a rendered height of one line with no text', function() {\n    expect(textarea.val()).to.equal('');\n    expect(textarea.outerHeight()).to.equal(36);\n  });\n\n  it('has a rendered height of 2 lines when large enough text entered', function() {\n    textarea.val('this is a test with a really long entry').trigger('input');\n\n    expect(textarea.outerHeight()).to.equal(58);\n  });\n\n  it('resizes to one line when deleting all text', function() {\n    textarea.val('').trigger('input');\n\n    expect(textarea.outerHeight()).to.equal(36);\n    expect(textarea.val()).to.equal('');\n  });\n\n  it('stops resizing when given max height is reached', function() {\n    var maxHeight = 100;\n    textarea.css('maxHeight', maxHeight + 'px');\n    textarea.val('this is a test with a really long entry this is a test with a really long entry this is a test with a really long entry this is a test with a really long entry').trigger('input');\n\n    expect(textarea.outerHeight()).to.equal(maxHeight);\n\n    // double check that text has exceeded height and textarea is scrollable\n    expect(textarea.get(0).scrollHeight).to.be.above(maxHeight);\n  });\n\n  it('maintains scroll position after textarea updates', function() {\n    textarea.val('').trigger('input');\n\n    expect(textarea.outerHeight()).to.equal(36);\n\n    var currentScrollPosition = $(window).scrollTop();\n\n    textarea.val('this is a test with a really long entry').trigger('input');\n    expect(textarea.outerHeight()).to.equal(58);\n\n    expect($(window).scrollTop()).to.equal(currentScrollPosition);\n  });\n});\n"]}